// RobotBuilder Version: 2.0
//
// This file was generated by RobotBuilder. It contains sections of
// code that are automatically generated and assigned by robotbuilder.
// These sections will be updated in the future when you export to
// Java from RobotBuilder. Do not put any code or make any change in
// the blocks indicating autogenerated code or it will be lost on an
// update. Deleting the comments indicating the section will prevent
// it from being updated in the future.


package org.usfirst.frc5905.TestRobot3.subsystems;

import org.usfirst.frc5905.TestRobot3.OI;
import org.usfirst.frc5905.TestRobot3.Robot;
import org.usfirst.frc5905.TestRobot3.RobotMap;
import org.usfirst.frc5905.TestRobot3.commands.*;

import edu.wpi.first.wpilibj.Joystick;
import edu.wpi.first.wpilibj.RobotDrive;
import edu.wpi.first.wpilibj.SpeedController;
import edu.wpi.first.wpilibj.Victor;

import edu.wpi.first.wpilibj.command.Subsystem;


/**
 *
 */
public class DriveTrain extends Subsystem {
	
	

    // BEGIN AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=CONSTANTS

    // END AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=CONSTANTS

    // BEGIN AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=DECLARATIONS
    private final SpeedController speedController1 = RobotMap.driveTrainSpeedController1;
    private final SpeedController speedController2 = RobotMap.driveTrainSpeedController2;
    private final SpeedController speedController3 = RobotMap.driveTrainSpeedController3;
    private final SpeedController speedController4 = RobotMap.driveTrainSpeedController4;
    private final RobotDrive robotDrive41 = RobotMap.driveTrainRobotDrive41;

    // END AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=DECLARATIONS
    
    private final double LeftCalibration = 1;
    private final double RightCalibration = 1;


    // Put methods for controlling this subsystem
    // here. Call these from Commands.

    public void initDefaultCommand() {
        // BEGIN AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=DEFAULT_COMMAND


    // END AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=DEFAULT_COMMAND

        // Set the default command for a subsystem here.
        // setDefaultCommand(new MySpecialCommand());
    	
    	setDefaultCommand (new MoveWithJoysticks(Robot.oi.getJoystick()));
    }



	public void moveWithJoysticks(Joystick joystick) {
		double leftVal = joystick.getRawAxis(1) * LeftCalibration;
		double rightVal = joystick.getRawAxis(5) * RightCalibration;
		robotDrive41.tankDrive(leftVal, rightVal, true);
	}
	
	public void moveForward (double power) {
		double leftVal = power * LeftCalibration;
		double rightVal = power * RightCalibration;
		robotDrive41.tankDrive(leftVal, rightVal, true);
	}
	
	public void moveBackward (double power) {
		double leftVal = power * LeftCalibration * -1;
		double rightVal = power * RightCalibration * -1;
		robotDrive41.tankDrive(leftVal, rightVal, true);
	}
	
	
}













